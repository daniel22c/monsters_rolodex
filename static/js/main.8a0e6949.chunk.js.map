{"version":3,"sources":["withCounter.js","components/card/card.component.jsx","ClickCounter.js","HoverCounter.js","components/card-list/card-list.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["withCounter","WrappedComponent","props","incrementCount","setState","prevState","count","state","name","this","React","Component","Card","onClick","onMouseOver","className","alt","src","monster","id","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","searchField","target","value","fetch","then","Response","json","users","num","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUA0BeA,EAxBK,SAACC,GAqBjB,OArBqC,kDAEjC,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,eAAiB,WACb,EAAKC,UAAS,SAAAC,GACV,MAAO,CAAEC,MAAOD,EAAUC,MAAM,OAPpC,EAAKC,MAAQ,CACTD,MAAO,GAHG,EAFe,0CAcjC,WACI,OAAO,cAACL,EAAD,CAAkBO,KAAK,SAC1BF,MAAOG,KAAKF,MAAMD,MAClBH,eAAkBM,KAAKN,qBAjBE,GACXO,IAAMC,YCDvBC,GCcEZ,EAdf,4JAEI,WAAS,IAAD,EAC4BS,KAAKP,MAA9BI,EADH,EACGA,MAAOH,EADV,EACUA,eACd,OACI,yCAEQ,yBAAQU,QAASV,EAAjB,qBACSG,EADT,mBAPpB,GAAkCK,cCWnBX,EAXf,4JAEI,WAAS,IAAD,EAC4BS,KAAKP,MAA9BI,EADH,EACGA,MAAOH,EADV,EACUA,eACd,OAAO,8BACH,qBAAIW,YAAaX,EAAjB,qBACaG,EADb,kBALZ,GAAkCK,c,cFAd,SAAAT,GAAK,OACrB,sBAAKa,UAAU,iBAAf,UACI,qBAAKC,IAAK,UACNC,IAAG,+BAA2Bf,EAAMgB,QAAQC,GAAzC,4BAEP,mCAAMjB,EAAMgB,QAAQV,QACpB,4BAAIN,EAAMgB,QAAQE,aGLbC,EAAW,SAAAnB,GAEpB,OADAoB,QAAQC,IAAIrB,GAER,qBAAKa,UAAY,YAAjB,SAEQb,EAAMsB,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCP5BO,G,OAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOb,UAAY,SACfc,KAAK,SAASF,YAAaA,EAC3BG,SAAUF,MCmCHG,E,kDAjCb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACd,EAAK5B,SAAS,CAAC6B,YAAYD,EAAEE,OAAOC,SAZpC,EAAK5B,MAAQ,CACXiB,SAAS,GACTS,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKpC,SAAS,CAACoB,SAASgB,OACrC/B,KAAKL,SAAS,CAACqC,IAAI,M,oBAKrB,WAAS,IAAD,EAC0BhC,KAAKF,MAA7BiB,EADF,EACEA,SAASS,EADX,EACWA,YACXS,EAAmBlB,EAASmB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQV,KAAKoC,cAAcC,SAASZ,EAAYW,kBAClD,OACE,sBAAK7B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEY,YAAY,cACZC,aAAgBnB,KAAKmB,eAEvB,cAAC,EAAD,CAAUJ,SAAUkB,W,GA5BV/B,aCMHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a0e6949.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nconst withCounter = (WrappedComponent) =>{\r\n    class WithCounter extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                count: 0\r\n            }\r\n                \r\n        }\r\n        incrementCount = ()=>{\r\n            this.setState(prevState=>{\r\n                return { count: prevState.count+1}\r\n            })\r\n        }\r\n        render(){\r\n            return <WrappedComponent name='Daniel'\r\n                count={this.state.count}\r\n                incrementCount = {this.incrementCount}\r\n            />\r\n        }\r\n    }\r\n    return WithCounter;\r\n}\r\n\r\nexport default withCounter;","import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = props=>(\r\n    <div className=\"card-container\">\r\n        <img alt ='monster'\r\n            src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}    \r\n        />\r\n        <h2> {props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React, {Component} from 'react';\r\nimport withCounter from './withCounter'\r\nexport class ClickCounter extends Component{\r\n    \r\n    render(){\r\n        const {count, incrementCount} = this.props\r\n        return(\r\n            <div>\r\n                return \r\n                    <button onClick={incrementCount}>\r\n                    Clicked {count} Times</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCounter(ClickCounter)","import React, {Component} from 'react';\r\nimport withCounter from './withCounter'\r\nexport class HoverCounter extends Component{\r\n    \r\n    render(){\r\n        const {count, incrementCount} = this.props\r\n        return <div>\r\n            <h2 onMouseOver={incrementCount}>\r\n                Hovered {count} times\r\n            </h2>\r\n        </div>\r\n    }\r\n}\r\nexport default withCounter(HoverCounter)","import React, {Component} from 'react';\r\nimport './card-list.css'\r\nimport {Card} from '../card/card.component';\r\nexport const CardList = props =>{\r\n    console.log(props);\r\n    return (\r\n        <div className = 'card-list'>\r\n            {\r\n                props.monsters.map(monster=>(\r\n                    <Card key = {monster.id} monster = {monster}/>\r\n                ))\r\n            }\r\n        </div>);\r\n};\r\n\r\n// export default CardList;","import React from 'react';\r\nimport './search-box.styles.css';\r\nexport const SearchBox = ({placeholder, handleChange})=>(\r\n    <input className = 'search' \r\n        type='search' placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);","import './App.css';\nimport React, {Component} from 'react';\nimport ClickCounter from './ClickCounter';\nimport HoverCounter from './HoverCounter';\nimport {CardList} from './components/card-list/card-list';\nimport {SearchBox} from './components/search-box/search-box.component';\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      searchField:''\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(Response=>Response.json())\n    .then(users=>this.setState({monsters:users}));\n    this.setState({num:2});\n  }\n  handleChange = (e)=>{\n    this.setState({searchField:e.target.value});\n  }\n  render(){\n    const { monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex  </h1>\n        <SearchBox \n          placeholder='search here'\n          handleChange = {this.handleChange}        \n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}